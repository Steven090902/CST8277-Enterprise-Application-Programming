<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.algonquincollege.cst8277</groupId>
    <artifactId>week11-lab-exercise-4</artifactId>
    <version>0.0.1-EXPERIMENTAL</version>
    <packaging>jar</packaging>
    <name>Week 11 Lab Exercise 4</name>
    <description>Embedded Tomcat Example</description>

    <!-- why is everything a property? Because hard-coded values become part of
        Maven's immutable Model object and then their contents can't be changed.
        However, if the value is set in a user-defined property BEFORE the Model
        object is created, then it is possible to do: mvn clean compile -Dfoo.bar.version=1.2.3
        in order to (say for example) test out a newer version of some dependency
        without having to change the pom.xml.
    -->
    
    <properties>
        <!-- maven properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
        <maven.compiler.release>11</maven.compiler.release>
        
        <!-- code properties -->
        <tomcat.version>9.0.39</tomcat.version>
        <jakarta.ws.rs.api.version>2.1.6</jakarta.ws.rs.api.version>
        <jersey.version>2.32</jersey.version>
        <jackson.version>2.11.3</jackson.version>
        <logback.version>1.2.3</logback.version>
        <slf4j.version>1.7.30</slf4j.version>
        
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-access</artifactId>
		    <version>${logback.version}</version>
		</dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
		  <groupId>jakarta.ws.rs</groupId>
		  <artifactId>jakarta.ws.rs-api</artifactId>
		  <version>${jakarta.ws.rs.api.version}</version>
		</dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
		    <groupId>org.glassfish.jersey.inject</groupId>
		    <artifactId>jersey-hk2</artifactId>
		    <version>${jersey.version}</version>
		</dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-jaxb</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.jaxrs</groupId>
		    <artifactId>jackson-jaxrs-json-provider</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
	    <dependency>
	        <groupId>com.fasterxml.jackson.datatype</groupId>
	        <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
	    </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
</project>